(window.webpackJsonp=window.webpackJsonp||[]).push([[206],{564:function(e,l,t){"use strict";t.r(l);var n=t(43),i=Object(n.a)({},(function(){var e=this,l=e.$createElement,t=e._self._c||l;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"linux-命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux-命令"}},[e._v("#")]),e._v(" linux 命令")]),e._v(" "),t("ul",[t("li",[e._v("1.切换 root 权限")])]),e._v(" "),t("p",[e._v("su")]),e._v(" "),t("ul",[t("li",[t("ol",{attrs:{start:"2"}},[t("li",[e._v("查看内存使用情况")])]),e._v(" "),t("p",[e._v("free -m\nps aux --sort -rss     实时的显示各个进程的内存使用情况并按RSS进行排序\natop     atop命令是一个终端环境的监控命令。它显示的是各种系统资源（CPU, memory, network, I/O, kernel）的综合，并且在高负载的情况下进行了 彩色标注\ncat /proc/meminfo     查看RAM使用情况")])]),e._v(" "),t("li",[t("p",[e._v("3.查看当前所有进程")])])]),e._v(" "),t("p",[e._v("ps -e")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("4.关机 (系统的关机、重启以及登出 )")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("shutdown -h now     关闭系统(1)\ninit 0 关闭系统(2)\ntelinit 0 关闭系统(3)\nshutdown -h hours:minutes    按预定时间关闭系统 shutdown -h 0:01\nshutdown -c  取消按预定时间关闭系统\nshutdown -r now 重启\nreboot 重启(2)\n")])])])]),e._v(" "),t("li",[t("p",[e._v("5.文件和目录")]),e._v(" "),t("p",[e._v("cd /home 进入 '/ home' 目录'\ncd .. 返回上一级目录\ncd ../.. 返回上两级目录\ncd 进入个人的主目录\ncd ~user1 进入个人的主目录\ncd - 返回上次所在的目录\npwd 显示工作路径\nls 查看目录中的文件\nls -F 查看目录中的文件\nls -l 显示文件和目录的详细资料\nls -a 显示隐藏文件\nls "),t("em",[e._v("[0-9]")]),e._v(" 显示包含数字的文件名和目录名\ntree 显示文件和目录由根目录开始的树形结构(1)\nlstree 显示文件和目录由根目录开始的树形结构(2)\nmkdir dir1 创建一个叫做 'dir1' 的目录'\nmkdir dir1 dir2 同时创建两个目录\nmkdir -p /tmp/dir1/dir2 创建一个目录树\nrm -f file1 删除一个叫做 'file1' 的文件'\nrmdir dir1 删除一个叫做 'dir1' 的目录'\nrm -rf dir1 删除一个叫做 'dir1' 的目录并同时删除其内容\nrm -rf dir1 dir2 同时删除两个目录及它们的内容\nmv dir1 new_dir 重命名/移动 一个目录\ncp file1 file2 复制一个文件\ncp dir/* . 复制一个目录下的所有文件到当前工作目录\ncp -a /tmp/dir1 . 复制一个目录到当前工作目录\ncp -a dir1 dir2 复制一个目录\nln -s file1 lnk1 创建一个指向文件或目录的软链接\nln file1 lnk1 创建一个指向文件或目录的物理链接\ntouch -t 0712250000 file1 修改一个文件或目录的时间戳 - (YYMMDDhhmm)\nfile file1 outputs the mime type of the file as text\niconv -l 列出已知的编码")])]),e._v(" "),t("li",[t("p",[e._v("6.查看文件内容")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("  cat file1 从第一个字节开始正向查看文件的内容\n  tac file1 从最后一行开始反向查看一个文件的内容\n  more file1 查看一个长文件的内容\n  less file1 类似于 'more' 命令，但是它允许在文件中和正向操作一样的反向操作\n  head -2 file1 查看一个文件的前两行\n  tail -2 file1 查看一个文件的最后两行\n  tail -f /var/log/messages 实时查看被添加到一个文件中的内容\n")])])])]),e._v(" "),t("li",[t("p",[e._v("7.查看系统信息")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("  cat /etc/centos-release     当前操作系统发行信息\n  cat /proc/version    查看当前操作系统版本信息\n   uname -a   查看版本当前操作系统内核信息\n")])])])]),e._v(" "),t("li",[t("p",[e._v("8.防火墙")]),e._v(" "),t("p",[e._v("禁用防火墙")]),e._v(" "),t("p",[e._v("systemctl stop firewalld.service #停止 firewall")]),e._v(" "),t("p",[e._v("systemctl disable firewalld.service #禁止 firewall 开机启动")]),e._v(" "),t("p",[e._v("systemctl restart firewall #重启防火墙使配置生效")]),e._v(" "),t("p",[e._v("systemctl enable firewall #设置防火墙开机启动 firewall")]),e._v(" "),t("p",[e._v("firewall-cmd --state 查看防火墙状态\nfirewall-cmd --add-port=8088/tcp permanent 永久性的开放 8088 端口")]),e._v(" "),t("p",[e._v("##检查是否生效\nfirewall-cmd --zone=public --query-port=8080/tcp")]),e._v(" "),t("p",[e._v("firewall-cmd --reload 重启")]),e._v(" "),t("p",[e._v("firewall-cmd --permanent --zone=public --list-ports 查看防火墙开放的端口")]),e._v(" "),t("p",[e._v("启动一个服务：systemctl start firewalld.service\n关闭一个服务：systemctl stop firewalld.service\n重启一个服务：systemctl restart firewalld.service\n显示一个服务的状态：systemctl status firewalld.service\n在开机时启用一个服务：systemctl enable firewalld.service\n在开机时禁用一个服务：systemctl disable firewalld.service\n查看服务是否开机启动：systemctl is-enabled firewalld.service;echo $?\n查看已启动的服务列表：systemctl list-unit-files|grep enabled")])])])])}),[],!1,null,null,null);l.default=i.exports}}]);