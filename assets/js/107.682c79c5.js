(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{457:function(t,l,a){"use strict";a.r(l);var o=a(43),s=Object(o.a)({},(function(){var t=this,l=t.$createElement,a=t._self._c||l;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"前端原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端原理"}},[t._v("#")]),t._v(" 前端原理")]),t._v(" "),a("h3",{attrs:{id:"html-加载过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html-加载过程"}},[t._v("#")]),t._v(" html 加载过程")]),t._v(" "),a("ul",[a("li",[a("ol",[a("li",[t._v("解析 html 构建 DOM 树")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("DOM 树渲染完成时触发 DOMContentLoaded 事件，此时可能外部资源还在加载。这里表示 DOM 树加载完成")])]),t._v(" "),a("ul",[a("li",[a("ol",{attrs:{start:"2"}},[a("li",[t._v("解析 CSS 生成 CSSOM 规则树")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"3"}},[a("li",[a("p",[t._v("将 DOM 树与 CSSOM 规则树合并在一起生成渲染对象树")]),t._v(" "),a("blockquote",[a("p",[t._v("1、过滤掉不可见节点(脚本标记、元标记)")])]),t._v(" "),a("blockquote",[a("p",[t._v("2、过滤掉样式隐藏的节点（display:none）")])]),t._v(" "),a("blockquote",[a("p",[t._v("所有的资源全部加载完成会触发window 的 load事件。")])])])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"4"}},[a("li",[t._v("遍历渲染树开始布局(layout)，计算每个节点的位置大小信息。")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"5"}},[a("li",[t._v("将渲染树每个节点绘制到屏幕。")])])])])])}),[],!1,null,null,null);l.default=s.exports}}]);