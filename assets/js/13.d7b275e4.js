(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{358:function(_,v,t){_.exports=t.p+"assets/img/front-module.79770b7b.png"},535:function(_,v,t){"use strict";t.r(v);var a=t(43),e=Object(a.a)({},(function(){var _=this,v=_.$createElement,a=_._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[a("h2",{attrs:{id:"前端-面试题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端-面试题"}},[_._v("#")]),_._v(" 前端 面试题")]),_._v(" "),a("h3",{attrs:{id:"_1-浏览器渲染页面-dom-文档加载的步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-浏览器渲染页面-dom-文档加载的步骤"}},[_._v("#")]),_._v(" 1.浏览器渲染页面 DOM 文档加载的步骤")]),_._v(" "),a("ul",[a("li",[a("p",[_._v("1.解析 HTML 结构。")])]),_._v(" "),a("li",[a("p",[_._v("2.加载外部脚本和 css 文件。")])]),_._v(" "),a("li",[a("p",[_._v("3.解析并执行脚本代码。")])]),_._v(" "),a("li",[a("p",[_._v("4.DOM 树构建完成。(此时会触发 DOMContentLoaded 事件)")])]),_._v(" "),a("li",[a("p",[_._v("5.加载外部图片等文件。")])]),_._v(" "),a("li",[a("p",[_._v("6.页面加载完毕。(此时会触发 load 事件)")])])]),_._v(" "),a("h3",{attrs:{id:"_2-什么是预请求，何时会触发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-什么是预请求，何时会触发"}},[_._v("#")]),_._v(" 2.什么是预请求，何时会触发")]),_._v(" "),a("ul",[a("li",[_._v('--非简单请求的 CORS（跨域）请求，会在正式通信之前，增加一次 HTTP 查询请求，称为"预检"请求（preflight）')]),_._v(" "),a("li",[_._v("使用了 PUT、DELETE、CONNECT、OPTIONS、TRACE、PATCH 方法")]),_._v(" "),a("li",[_._v("人为设置了非规定内的其他首部字段，参考上面简单请求的安全字段集合，还要特别注意 Content-Type 的类型")]),_._v(" "),a("li",[_._v("XMLHttpRequestUpload 对象注册了任何事件监听器")]),_._v(" "),a("li",[_._v("请求中使用了 ReadableStream 对象")])]),_._v(" "),a("h3",{attrs:{id:"_3-布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-布局"}},[_._v("#")]),_._v(" 3. 布局")]),_._v(" "),a("ul",[a("li",[a("p",[_._v("（1）静态布局（Static Layout）")]),_._v(" "),a("blockquote",[a("p",[_._v("传统 Web 设计，网页上的所有元素的尺寸一律使用 px 作为单位。")])])]),_._v(" "),a("li",[a("p",[_._v("（2）流式布局（Liquid Layout）")]),_._v(" "),a("blockquote",[a("p",[_._v("流式布局也叫百分比布局\n页面元素的宽度按照屏幕分辨率进行适配调整，但整体"),a("strong",[_._v("布局不变")]),_._v("\n代表作栅栏系统（网格系统）")])]),_._v(" "),a("ul",[a("li",[_._v("1、布局特点：屏幕分辨率变化时，页面里元素的大小会变化而但布局不变。【这就导致如果屏幕太大或者太小都会导致元素无法正常显示】")]),_._v(" "),a("li",[_._v("2、设计方法：使用%"),a("strong",[_._v("百分比")]),_._v("定义宽度，高度大都是用 px 来固定住，可以根据可视区域 (viewport) 和父元素的实时尺寸进行调整，尽可能的适应各种分辨率。往往配合 max-width/min-width 等属性控制尺寸流动范围以免过大或者过小影响阅读。")]),_._v(" "),a("li",[_._v("3、流式布局常用的设计模板: 3.1 左侧固定+右侧自适应 3.2 左右固定宽度+中间自适应(参考京东手机版)")])])]),_._v(" "),a("li",[a("p",[_._v("（3）自适应布局（Adaptive Layout）")]),_._v(" "),a("blockquote",[a("p",[_._v("自适应布局的特点是分别为不同的屏幕分辨率定义布局，即创建多个静态布局，每个静态布局对应一个屏幕分辨率范围。改变屏幕分辨率可以切换不同的静态局部（页面元素位置发生改变），但在每个静态布局中，页面元素不随窗口大小的调整发生变化。可以把自适应布局看作是静态布局的一个系列。")])])]),_._v(" "),a("li",[a("p",[_._v("1、布局特点：屏幕分辨率变化时，页面里面元素的"),a("strong",[_._v("位置会变化而大小不会变化")]),_._v("。")])]),_._v(" "),a("li",[a("p",[_._v("2、设计方法：使用 "),a("strong",[_._v("@media")]),_._v(" 媒体查询给不同尺寸和介质的设备切换不同的样式。在优秀的响应范围设计下可以给适配范围内的设备最好的体验，在同一个设备下实际还是固定的布局。")])]),_._v(" "),a("li",[a("p",[_._v("（4）响应式布局（Responsive Layout）")]),_._v(" "),a("blockquote",[a("p",[_._v("响应式设计的目标是确保一个页面在所有终端上（各种尺寸的 PC、手机、手表、冰箱的 Web 浏览器等等）都能显示出令人满意的效果\nBootstrap 提供了一套响应式、移动设备优先的流式栅格系统，随着屏幕或视口（viewport）尺寸的增加，系统会自动分为最多 12 列。它包含了易于使用的预定义类，还有强大的 mixin 用于生成更具语义的布局。")])]),_._v(" "),a("ul",[a("li",[_._v("1、布局特点：每个屏幕分辨率下面会有一个布局样式，即"),a("strong",[_._v("元素位置和大小都会变")]),_._v("。")]),_._v(" "),a("li",[_._v("2、设计方法：媒体查询+流式布局。通常使用 @media 媒体查询 和网格系统 (Grid System) 配合相对布局单位进行布局，实际上就是综合响应式、流动等上述技术通过 CSS 给单一网页不同设备返回不同样式的技术统称。")]),_._v(" "),a("li",[_._v("优点：适应 pc 和移动端，如果足够耐心，效果完美")]),_._v(" "),a("li",[_._v("缺点：（1）媒体查询是有限的，也就是可以枚举出来的，只能适应主流的宽高。（2）要匹配足够多的屏幕大小，工作量不小，设计也需要多个版本。")])])]),_._v(" "),a("li",[a("p",[_._v("（5）弹性布局（rem/em 布局）")]),_._v(" "),a("blockquote",[a("p",[_._v("em 布局/rem 布局")])]),_._v(" "),a("ul",[a("li",[_._v("flex 布局也不是真正的弹性布局，因为百分比布局和 flex 布局都只是实现了宽度方向的等比缩放，高度是不变的（图片除外）！！")]),_._v(" "),a("li",[_._v("rem 是弹性布局的一种实现方式，rem 布局是宽高同时缩放，保证了元素宽高比，即元素时“”相似的“”，不会变形！")])])]),_._v(" "),a("li",[a("p",[_._v("详解： "),a("a",{attrs:{href:"https://www.cnblogs.com/yanayana/p/7066948.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("https://www.cnblogs.com/yanayana/p/7066948.html"),a("OutboundLink")],1)])])]),_._v(" "),a("h3",{attrs:{id:"_3-1-什么是响应式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-什么是响应式"}},[_._v("#")]),_._v(" 3.1 什么是响应式")]),_._v(" "),a("blockquote",[a("p",[_._v("根据屏幕宽度，自动调整网页 div 显示和布局，以适应不同尺寸屏幕优化浏览体验。"),a("br"),_._v("\n响应式布局设计，是指将桌面设备上的网页内容在移动设备上进行优化排版，使用户能够在移动设备上更方便地阅读并操作")])]),_._v(" "),a("h3",{attrs:{id:"_3-2-布局选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-布局选择"}},[_._v("#")]),_._v(" 3.2 布局选择")]),_._v(" "),a("ul",[a("li",[_._v("1.如果只做 pc 端，那么静态布局（定宽度）是最好的选择；")]),_._v(" "),a("li",[_._v("2.如果做移动端，且设计对高度和元素间距要求不高，那么弹性布局（rem+js）是最好的选择，一份 css+一份 js 调节 font-size 搞定；")]),_._v(" "),a("li",[_._v("3.如果 pc，移动要兼容，而且要求很高那么响应式布局还是最好的选择，前提是设计根据不同的高宽做不同的设计，响应式根据媒体查询做不同的布局。")])]),_._v(" "),a("h3",{attrs:{id:"_4-es6-新特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-es6-新特性"}},[_._v("#")]),_._v(" 4.ES6 新特性")]),_._v(" "),a("p",[_._v("块级作用域，不一样的变量声明：const 和 let")]),_._v(" "),a("p",[_._v("模板字符串")]),_._v(" "),a("p",[_._v("箭头函数")]),_._v(" "),a("p",[_._v("对象和数组解构")]),_._v(" "),a("p",[_._v("对象超类")]),_._v(" "),a("h3",{attrs:{id:"_5-常用的浏览器内核"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-常用的浏览器内核"}},[_._v("#")]),_._v(" 5.常用的浏览器内核")]),_._v(" "),a("p",[_._v("1、Trident IE、猎豹安全、360 极速浏览器、百度浏览器"),a("br"),_._v("\n2、Gecko firefox 可惜这几年已经没落了，打开速度慢、升级频繁、猪一样的队友 flash、神一样的对手 chrome。"),a("br"),_._v("\n3、webkit Safari 从 Safari 推出之时起，它的渲染引擎就是 Webkit")]),_._v(" "),a("p",[_._v("4、Blink Chrome 和 Opera 2013 年，谷歌宣布从 WebKit 分支出来，创建了渲染引擎 Blink。")]),_._v(" "),a("h3",{attrs:{id:"_6-前端模块化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-前端模块化"}},[_._v("#")]),_._v(" 6.前端模块化")]),_._v(" "),a("blockquote",[a("p",[_._v("JavaScript 在早期的设计中就没有模块、包、类的概念，开发者需要模拟出类似的功能，来隔离、组织复杂的 JavaScript 代码，我们称为模块化。")])]),_._v(" "),a("blockquote",[a("p",[_._v("模块就是一个实现特定功能的文件，有了模块我们就可以更方便的使用别人的代码，要用什么功能就加载什么模块。")])]),_._v(" "),a("blockquote",[a("p",[_._v("模块化开发的四点好处：")])]),_._v(" "),a("ul",[a("li",[_._v("（1）、 避免变量污染，命名冲突")]),_._v(" "),a("li",[_._v("（2）、提高代码复用率")]),_._v(" "),a("li",[_._v("（3）、提高了可维护性")]),_._v(" "),a("li",[_._v("（4）、方便依赖关系管理")])]),_._v(" "),a("blockquote",[a("p",[a("img",{attrs:{src:t(358),alt:"image"}})])]),_._v(" "),a("h3",{attrs:{id:"_11-同步和异步的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-同步和异步的区别"}},[_._v("#")]),_._v(" 11.同步和异步的区别")]),_._v(" "),a("p",[_._v("同步交互：指发送一个请求,需要等待返回,然后才能够发送下一个请求，有个等待过程；")]),_._v(" "),a("p",[_._v("异步交互：指发送一个请求,不需要等待返回,随时可以再发送下一个请求，即不需要等待。")]),_._v(" "),a("p",[_._v("区别：一个需要等待，一个不需要等待，在部分情况下，我们的项目开发中都会优先选择不需要等待的异步交互方式。")]),_._v(" "),a("p",[_._v("哪些情况建议使用同步交互呢？比如银行的转账系统，对数据库的保存操作等等，都会使用同步交互操作，其余情况都优先使用异步交互。")]),_._v(" "),a("h3",{attrs:{id:"_11-1-阻塞和非阻塞区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-阻塞和非阻塞区别"}},[_._v("#")]),_._v(" 11.1 阻塞和非阻塞区别")]),_._v(" "),a("p",[_._v("同步和异步关注的是消息通信机制")]),_._v(" "),a("p",[_._v("阻塞和非阻塞关注的是程序在等待调用结果（消息，返回值）时的状态.")]),_._v(" "),a("p",[_._v("阻塞调用：是指调用结果返回之前，当前线程会被挂起。一直处于等待消息通知，不能够执行其他业务，调用线程只有在得到结果之后才会返回。")]),_._v(" "),a("p",[_._v("非阻塞调用：指在不能立刻得到结果之前，该调用不会阻塞当前线程，而会立刻返回。")]),_._v(" "),a("h3",{attrs:{id:"_12-常用的鉴权方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-常用的鉴权方式"}},[_._v("#")]),_._v(" 12.常用的鉴权方式")]),_._v(" "),a("p",[_._v("HTTP Basic Authentication\nsession-cookie\nToken 验证\nOAuth(开放授权)")]),_._v(" "),a("h3",{attrs:{id:"_13-项目性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-项目性能优化"}},[_._v("#")]),_._v(" "),a("strong",[_._v("13.项目性能优化")])]),_._v(" "),a("ul",[a("li",[a("p",[_._v("1、减少 HTTP 请求数")]),_._v(" "),a("ul",[a("li",[_._v("文件合并，1、公共库合并 2、不同页面单独合并")]),_._v(" "),a("li",[_._v("图片处理 1、雪碧图 2、Base64 3、使用字体图标来代替图片")])])]),_._v(" "),a("li",[a("p",[_._v("2、减小资源大小")]),_._v(" "),a("ul",[a("li",[_._v("压缩：（1）HTML 压缩，（2）CSS 压缩，（3）JS 压缩与混乱，（4）图片压缩")]),_._v(" "),a("li",[_._v("开启 gzip")])])]),_._v(" "),a("li",[a("p",[_._v("3、优化网络连接")]),_._v(" "),a("ul",[a("li",[_._v("（1）使用 CDN，（2）使用 DNS 预解析，（3）持久连接")])])]),_._v(" "),a("li",[a("p",[_._v("4、优化资源加载")]),_._v(" "),a("ul",[a("li",[_._v("资源加载位置： 　"),a("br"),_._v("\n（1）CSS 文件放在 head 中，先外链，后本页"),a("br"),_._v("\n（2）JS 文件放在 body 底部，先外链，后本页"),a("br"),_._v("\n（3）处理页面、处理页面布局的 JS 文件放在 head 中，如 babel-polyfill.js 文件、flexible.js 文件"),a("br"),_._v("\n（4）body 中间尽量不写 style 标签和 script 标签")]),_._v(" "),a("li",[_._v("资源加载时机"),a("br"),_._v("\n（1）异步 script 标签，defer，async"),a("br"),_._v("\n（2）模块按需加载"),a("br"),_._v("\n（3）使用资源预加载 preload"),a("br"),_._v("\n（4）资源懒加载与资源预加载")])])]),_._v(" "),a("li",[a("p",[_._v("5、减少重绘回流")]),_._v(" "),a("ul",[a("li",[_._v("DOM 优化"),a("br"),_._v("\n（1）批量操作 DOM"),a("br"),_._v("\n（2）批量操作 CSS 样式\n（3）事件代理"),a("br"),_._v("\n（4）防抖和节流")]),_._v(" "),a("li",[_._v("样式设置"),a("br"),_._v("\n（1）避免使用层级较深的选择器，或其他一些复杂的选择器，以提高 CSS 渲染效率"),a("br"),_._v("\n（2）避免使用 CSS 表达式，CSS 表达式是动态设置 CSS 属性的强大但危险方法，它的问题就在于计算频率很快。不仅仅是在页面显示和缩放时，就是在页面滚动、乃至移动鼠标时都会要重新计算一次"),a("br"),_._v("\n（3）元素适当地定义高度或最小高度，否则元素的动态内容载入时，会出现页面元素的晃动或位置，造成回流"),a("br"),_._v("\n（4）给图片设置尺寸。如果图片不设置尺寸，首次载入时，占据空间会从 0 到完全出现，上下左右都可能位移，发生回流"),a("br"),_._v("\n（5）不要使用 table 布局，因为一个小改动可能会造成整个 table 重新布局。而且 table 渲染通常要 3 倍于同等元素时间\n（6）能够使用 CSS 实现的效果，尽量使用 CSS 而不使用 JS 实现")])])]),_._v(" "),a("li",[a("p",[_._v("6、webpack 优化"),a("br"),_._v("\n（1）动态导入和按需加载"),a("br"),_._v("\n（2）打包公共代码"),a("br"),_._v("\n（3）长缓存优化"),a("br"),_._v("\n（4）公用代码内联")])]),_._v(" "),a("li",[a("p",[_._v("详解： "),a("a",{attrs:{href:"https://www.cnblogs.com/xiaohuochai/p/9178390.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("https://www.cnblogs.com/xiaohuochai/p/9178390.html"),a("OutboundLink")],1)])])]),_._v(" "),a("h3",{attrs:{id:"_13-1-避免使用空的-src-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-避免使用空的-src-属性"}},[_._v("#")]),_._v(" 13.1 避免使用空的 src 属性")]),_._v(" "),a("p",[_._v("避免使用空的 src 属性确实可以缩减浏览器首屏渲染的时间，因为浏览器在渲染过程中会把 src 属性中的空内容进行加载，直至加载失败，\n影响 DOMContentLoaded 与 Loaded 事件之间的资源准备过程，拉长了首屏渲染所用的时间；但空的 href 属性对首屏渲染的影响比较小。")]),_._v(" "),a("ul",[a("li",[a("p",[_._v("虚拟 dom 原理")])]),_._v(" "),a("li",[a("p",[_._v("说一下浏览器的缓存机制")])]),_._v(" "),a("li",[a("p",[_._v("移动端 300ms 延迟，fastclick")])]),_._v(" "),a("li",[a("p",[_._v("请解释 XSS 与 CSRF 分别是什么，两者有什么联系？如何防御？")])]),_._v(" "),a("li",[a("p",[_._v("图片的懒加载和预加载")])]),_._v(" "),a("li",[a("p",[_._v("说说从输入 URL 到看到页面发生的全过程，越详细越好")]),_._v(" "),a("blockquote",[a("p",[_._v("1.通过 dns 解析成 ip 地址")]),_._v(" "),a("blockquote",[a("p",[_._v("首先在本地缓存中查询 IP\n没有的话会去系统配置的 DNS 服务器中查询\n如果还没得话,会直接去 DNS 根服务器查询,这一步查询会找出一级域名的服务器\n然后去该服务器查询二级域名\n接下来三级域名的查询其实是我们配置的，然后还可以给别的三级域名配置一个 IP\n接收到 ip 地址后，会先把 ip 和域名对应关系保存到本地 dns 缓存，以便下次方便访问")])])]),_._v(" "),a("blockquote",[a("p",[_._v("3.获取 IP 后进行 tcp 连接(三次握手)")])]),_._v(" "),a("blockquote",[a("p",[_._v("4.建立连接后从服务器获取 HTML 文件,浏览器开始解析文件")])]),_._v(" "),a("blockquote",[a("p",[_._v("5.浏览器进行页面渲染")]),_._v(" "),a("blockquote",[a("p",[_._v("先会根据 HTML 构建 DOM 树\n有 CSS 的话会构建 CSSOM 树\n有 script 的话，会判断是否存在 async 或者 defer，前者会并行进行下载并执行 JS，后者会先下载文件，然后等待 HTML 解析完成后顺序执行\nCSSOM 树和 DOM 树构建完成后会开始生成 Render 树\n在生成 Render 树的过程中，浏览器就开始调用 GPU 绘制")])])])]),_._v(" "),a("li",[a("p",[_._v("ajax 是同步还是异步，怎么样实现同步")])]),_._v(" "),a("li",[a("p",[_._v("ajax 实现过程")])]),_._v(" "),a("li",[a("p",[_._v("对跨域了解吗。jsonp 的限制")])]),_._v(" "),a("li",[a("p",[_._v("ES6 新特性")])]),_._v(" "),a("li",[a("p",[_._v("es6 和 es5 的区别")])]),_._v(" "),a("li",[a("p",[_._v("get 和 post 的请求区别")])]),_._v(" "),a("li",[a("p",[_._v("boostrap 的底层原理")])])]),_._v(" "),a("ul",[a("li",[a("p",[_._v("webpack 的一些 plugin，怎么使用 webpack 对项目进行优化。")])]),_._v(" "),a("li",[a("p",[_._v("yarn 和 npm 区别")])])]),_._v(" "),a("ul",[a("li",[a("p",[_._v("上一家公司的一个整体开发流程")])]),_._v(" "),a("li",[a("p",[_._v("怎么避免自己的页面被 iframe 嵌套")])])])])}),[],!1,null,null,null);v.default=e.exports}}]);