(window.webpackJsonp=window.webpackJsonp||[]).push([[288],{649:function(e,o,t){"use strict";t.r(o);var a=t(43),r=Object(a.a)({},(function(){var e=this,o=e.$createElement,t=e._self._c||o;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[e._v("#")]),e._v(" 缓存")]),e._v(" "),t("h3",{attrs:{id:"_1-cookie-和-session-区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-cookie-和-session-区别"}},[e._v("#")]),e._v(" 1.cookie 和 session 区别")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("存储位置")])]),e._v(" "),t("li",[t("p",[e._v("安全性")])]),e._v(" "),t("li",[t("p",[e._v("生命周期 cookie 的生命周期是累计时间，即如果我们 cookie 设置 setMaxAge(30)，则 30 秒后失效")]),e._v(" "),t("p",[e._v("session 生命周期是间隔时间，如果设置 session 20min,只在 20min 内没有访问 session，则 session 失效")])]),e._v(" "),t("li",[t("p",[e._v("网络传输量")])])]),e._v(" "),t("h3",{attrs:{id:"_2-localstorage-和-cookie-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-localstorage-和-cookie-的区别"}},[e._v("#")]),e._v(" "),t("strong",[e._v("2 localStorage 和 cookie 的区别")])]),e._v(" "),t("ul",[t("li",[e._v("1、cookie 数据始终在同源的"),t("a",{attrs:{href:"https://www.baidu.com/s?wd=http%E8%AF%B7%E6%B1%82&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao",target:"_blank",rel:"noopener noreferrer"}},[e._v("http 请求"),t("OutboundLink")],1),e._v("中携带（即使不需要），即 cookie 在"),t("a",{attrs:{href:"https://www.baidu.com/s?wd=%E6%B5%8F%E8%A7%88%E5%99%A8&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao",target:"_blank",rel:"noopener noreferrer"}},[e._v("浏览器"),t("OutboundLink")],1),e._v("\n和服务器间来回传递。而 localStorage 不会自动把数据发给服务器，仅在本地保存")]),e._v(" "),t("li",[e._v("2、存储大小限制也不同，cookie 数据不能超过 4k，同时因为每次"),t("a",{attrs:{href:"https://www.baidu.com/s?wd=http%E8%AF%B7%E6%B1%82&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao",target:"_blank",rel:"noopener noreferrer"}},[e._v("http 请求"),t("OutboundLink")],1),e._v("都会携带\ncookie，所以 cookie 只适合保存很小的数据，如会话标识。localStorage\n虽然也有存储大小的限制，但比 cookie 大得多，可以达到 5M 或更大")]),e._v(" "),t("li",[e._v("3、数据有效期不同 localStorage：始终有效，窗口或"),t("a",{attrs:{href:"https://www.baidu.com/s?wd=%E6%B5%8F%E8%A7%88%E5%99%A8&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao",target:"_blank",rel:"noopener noreferrer"}},[e._v("浏览器"),t("OutboundLink")],1),e._v("关闭也一直保存，因此用作持久数据；cookie 只在设置的 cookie 过期\n时间之前一直有效，即使窗口或浏览器关闭")]),e._v(" "),t("li",[e._v("4、作用域不同，localStorage 在所有同源窗口中都是共享的；cookie 也是在所有同源窗口中都是共享的")])]),e._v(" "),t("h3",{attrs:{id:"_3-cookie-字段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-cookie-字段"}},[e._v("#")]),e._v(" "),t("strong",[e._v("3 cookie 字段")])]),e._v(" "),t("ul",[t("li",[e._v("name 　　字段为一个 cookie 的名称。")]),e._v(" "),t("li",[e._v("value 　　字段为一个 cookie 的值。")]),e._v(" "),t("li",[e._v("domain 　　字段为可以访问此 cookie 的域名。")]),e._v(" "),t("li",[e._v("path 　　字段为可以访问此 cookie 的页面路径。 比如 domain 是 abc.com,path 是/test，那么只有/test 路径下的页面可以读取此 cookie。")]),e._v(" "),t("li",[e._v("expires/Max-Age 　　字段为此 cookie 超时时间。")]),e._v(" "),t("li",[e._v("Size 　　字段 此 cookie 大小。")]),e._v(" "),t("li",[e._v("http 　　字段 cookie 的 httponly 属性。若此属性为 true，则只有在 http 请求头中会带有此 cookie 的信息，而不能通过 document.cookie 来访问此 cookie。")]),e._v(" "),t("li",[e._v("secure 　　 字段 设置是否只能通过 https 来传递此条 cookie")])]),e._v(" "),t("h3",{attrs:{id:"_4-禁止-js-获取-cookie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-禁止-js-获取-cookie"}},[e._v("#")]),e._v(" 4 禁止 js 获取 cookie")]),e._v(" "),t("p",[e._v("HttpOnly 可以用于防止 JavaScript 获取 cookie，比如 document.cookie")]),e._v(" "),t("h3",{attrs:{id:"_5-js-如何判断浏览器是否禁用-cookie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-js-如何判断浏览器是否禁用-cookie"}},[e._v("#")]),e._v(" 5. js 如何判断浏览器是否禁用 cookie")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("navigator.cookieEnabled  如果浏览器启用了cookie，该属性值为true。如果禁用了cookie，则值为false。\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h3",{attrs:{id:"_6-强缓存和协商缓存区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-强缓存和协商缓存区别"}},[e._v("#")]),e._v(" 6.强缓存和协商缓存区别")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("1.强缓存：不会向服务器发送请求，直接从缓存中读取资源，在 chrome 控制台的 network 选项中可以看到该请求返回 200 的状态码;")])]),e._v(" "),t("li",[t("p",[e._v("2.协商缓存：向服务器发送请求，服务器会根据这个请求的 request header 的一些参数来判断是否命中协商缓存，如果命中，则返回 304 状态码并带上新的 response header 通知浏览器从缓存中读取资源；")])]),e._v(" "),t("li",[t("p",[e._v("3.强缓存和对比缓存同时存在，如果强缓存还在生效期则强制缓存覆盖对比缓存，对比缓存不生效；如果强缓存不在有效期，对比缓存生效。即：强缓存优先级 > 对比缓存优先级\n"),t("a",{attrs:{href:"https://juejin.im/post/5be4e76f5188250e8601b4a6#heading-5",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://juejin.im/post/5be4e76f5188250e8601b4a6#heading-5"),t("OutboundLink")],1),e._v("\n详解：https://segmentfault.com/a/1190000008956069")])])]),e._v(" "),t("h3",{attrs:{id:"_7-列举三种禁止浏览器缓存的头字段，并写出响应的设置值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-列举三种禁止浏览器缓存的头字段，并写出响应的设置值"}},[e._v("#")]),e._v(" 7.列举三种禁止浏览器缓存的头字段，并写出响应的设置值")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("Expires：告诉浏览器把回送的资源缓存多长时间 -1 或 0 则是不缓存")]),e._v(" "),t("blockquote",[t("p",[e._v("简要：添加 Expires 头能有效的利用浏览器的缓存能力来改善页面的性能，能在后续的页面中有效避免很多不必要的 Http 请求，WEB 服务器使用 Expires 头来告诉 Web 客户端它可以使用一个组件的当前副本，直到指定的时间为止。 例如：Expires：Thu，15 Apr 2010 20：00：00 GMT; 他告诉浏览器缓存有效性持续到 2010 年 4 月 15 日为止，在这个时间之内相同的请求使用缓存，这个时间之外使用 http 请求。")])])]),e._v(" "),t("li",[t("p",[e._v("Cache-Control：no-cache Cathe-Control：max-age=315360000")]),e._v(" "),t("blockquote",[t("p",[e._v("Expires 有一个非常大的缺陷，它使用一个固定的时间，要求服务器与客户端的时钟保持严格的同步，并且这一天到来后，服务器还得重新设定新的时间。 HTTP1.1 引入了 Cathe-Control，它使用 max-age 指定组件被缓存多久，从请求开始在 max-age 时间内浏览器使用缓存，之外的使用请求，这样就可以消除 Expires 的限制， 如果对浏览器兼容性要求很高的话，可以两个都使用。")])])]),e._v(" "),t("li",[t("p",[e._v("Pragma：no-cache")])])])])}),[],!1,null,null,null);o.default=r.exports}}]);